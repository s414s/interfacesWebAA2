svg {
    width: 400px;
    fill: white;
    stroke: black;
    stroke-linecap: round;

    transform: rotate(-90deg);

    --start-seconds: 57;
    --start-minutes: 45;
    --start-hours: 11;
}

.seconds,
.minute,
.hour {
    transform: translate(20px, 20px) rotate(0deg);
}

.seconds {
    stroke-width: 0.3;
    stroke: #d00505;
    transform: translate(20px, 20px) rotate(calc(var(--start-seconds) * 6deg));
    animation: rotateSecondsHand 60s steps(60) infinite;
}

.minute {
    stroke-width: 0.6;
    transform: translate(20px, 20px) rotate(calc(var(--start-minutes) * 6deg));
    animation: rotateMinuteHand 3600s steps(60) infinite;
    animation-delay: calc(var(--start-seconds) * -1 * 1s);
}

.hour {
    stroke-width: 1;
    transform: translate(20px, 20px) rotate(calc(var(--start-hours) * 30deg));
    animation: rotateHourHand calc(12 * 60 * 60s) linear infinite;
    animation-delay: calc(calc(var(--start-minutes) * -60 * 1s) + calc(var(--start-seconds) * -1 * 1s));
}

.pin {
    stroke: #d00505;
    stroke-width: 0.2;
}

.tiaText {
    font-size: 1px;
    font-family: sans-serif;
    transform: translate(14px, 19px) rotate(90deg);
    fill: #dfdfdf;
    stroke: none;
}

@keyframes rotateSecondsHand {
    from {
        transform: translate(20px, 20px) rotate(calc(var(--start-seconds) * 6deg));
    }

    to {
        transform: translate(20px, 20px) rotate(calc(var(--start-seconds) * 6deg + 360deg));
    }
}

@keyframes rotateMinuteHand {
    from {
        transform: translate(20px, 20px) rotate(calc(var(--start-minutes) * 6deg));
    }

    to {
        transform: translate(20px, 20px) rotate(calc(var(--start-minutes) * 6deg + 360deg));
    }
}

@keyframes rotateHourHand {
    from {
        transform: translate(20px, 20px) rotate(calc(var(--start-hours) * 30deg));
    }

    to {
        transform: translate(20px, 20px) rotate(calc(var(--start-hours) * 30deg + 360deg));
    }
}